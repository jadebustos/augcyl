<?xml version='1.0' encoding='iso-8859-1'?>
<!-- CAPITULO 2 -->
  <chapter>
    <title>Gestión de Memoria</title>
    <para>Linux es un sistema operativo con una gestión de memoria
    que esta preparada para memoria virtual y sistemas
    multiprocesador.</para>
    <sect1>
      <title>Memoria física</title>
      <para>La memoria física es la memoria RAM que dispone el
      ordenador.</para>
<para>Esta memoria es el espacio que están utilizando los procesos
      que se están ejecutando. En Linux también se utiliza la memoria física para tener cache de los datos
    de los dispositivos de i/o, memoria compartida y buffers de intercambio.</para>
<para>Al ser un recurso caro, pero rápido, Linux va a intentar
      utilizar el máximo de ella, por ello cuando la memoria no es
      utilizada por las aplicaciones, es decir los procesos lanzados
      no ocupan toda la memoria, utiliza toda la que puede como cache
      de datos contra otros dispositivos más lentos como los discos
      duros. Cuando las aplicaciones vayan requiriendo más memoria
      estas caches serán más pequeñas.</para>
<para>La memoria está paginada y así poder llevar partes a la memoria
      virtual. También puede llevar procesos enteros.</para>
    </sect1>
    <sect1>
      <title>Memoria virtual</title>
      <para>Cuando algún espacio de memoria no es utilizado puede ser
      llevado a un dispositivo de almacenamiento. Con <command>free</command> podemos ver
      su utilización actual.</para>
<para>La memoria swap debemos indicar nosotros en donde queremos
      ubicarla. Para ello podemos dedicar una partición entera de
      nuestros discos duros o bien crear un fichero en uno de los
      sistemas de ficheros que lo soporten. Debemos tener en cuenta
      que es más óptimo la utilización de una partición pero para ello
      debemos tener el espacio reservado para la creación de la partición.</para>
      <sect2>
        <title>Creación de Swap</title>
        <para>Para crear una partición de swap debemos utilizar el
        programa de particiones.</para>
<screen><prompt>[root@sal]$ </prompt><userinput>fdisk</userinput>
<computeroutput>Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
</computeroutput>
</screen>
<para>Crearemos la partición del tipo y tamaño que deseemos y lo único
que cambiaremos con la opción t es el id de la partición al tipo
82. Nos debe quedar algo así:</para>
<screen>
<computeroutput>
/dev/hda3           14552       14593      337365   82  Linux swap / Solaris
</computeroutput>
</screen>
<para>Si bien queremos crear un fichero de swap lo haremos con el
siguiente comando.</para>
<screen><prompt>[root@sal]$ </prompt><userinput>mkswap /file-swap 1024</userinput>
<computeroutput>Setting up swapspace, size = 1044480 
	bytes
</computeroutput>
</screen>
<para>Ya tenemos creada la swap ahora hay que indicar al sistema que
la utilice.</para>
      </sect2>
      <sect2>
        <title>Usando el Swap</title>
        <para>Para empezar a utilizarla ejecutamos el comando swapon.</para><screen><prompt>[root@sal]$ </prompt><userinput>swapon /file-swap</userinput>
</screen>
<para>Evidentemente para no estar haciendo esto cada vez que
arrancamos se puede configurar en el fichero
<filename>/etc/fstab</filename> que es donde están las particiones a
montar (y ficheros swap) en el arranque.</para>
<para>Una vez puesta a disposición del sistema el gestor de memoria la
utilizará cuando lo considere necesario.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Cache y Buffers</title>
      <para>El comando <command>free</command> también nos da información de cuanta
      memoria se esta dedicando a caches, buffers y memoria compartida.</para>
<para>La cache es utiliza para guardar temporalmente información que
      esta en los dispositivos de I/O que pueden volver a
      necesitarse. Linux intentará utilizar el máximo de memoria
      física para este concepto ya que cuanto más tenga más
      posibilidades de que algo que se le pida de nuevo lo tenga ya en
      las caches. Automáticamente hará las caches más pequeñas si la
      memoria es necesitada por las aplicaciones.</para>
    </sect1>
<sect1>
      <title>Herramientas</title>
<para>Para ver el uso y análisis de la memoria el
administrador dispone de algunas herramientas.</para>
<para>El rendimiento de la memoria virtual es muy importante ya que cuando
      vayamos a hacer uso de ella es porque al sistema se le esta
      requiriendo un esfuerzo mayor y no queremos que sea el cuello de
      botella. Por ello las herramientas nos deben dar las
estadísticas de la utilización de la memoria.</para>
      <sect2>
        <title>Comando <command>free</command></title>
        <para>Para ver el estado de la memoria actual tenemos el
        comando <command>free</command>.</para>
<screen><prompt>[pcm@sal]$ </prompt><userinput>free -m</userinput>
<computeroutput>             total       used       free     shared    buffers     cached
Mem:           504        491         12          0         41        147
-/+ buffers/cache:        302        201
Swap:          329         51        277
</computeroutput><prompt>[pcm@sal]$ </prompt>
</screen>
<para>La primera linea nos está dando como realmente se esta utilizando la
memoria física, y la segunda cuanta memoria hay libre desde
el punto de vista de las aplicaciones. La última linea contiene la
utilización de la memoria swap.</para>
<para>En detalle, este sistema tiene 504Mb de memoria de los cuales están usados
491Mb y 12Mb libres. De los usados 302Mb por las aplicaciones, 41Mb de
memoria compartida y 147Mb para buffers y caches. Como la memoria para
buffers y cache es adaptable según las necesidades, tendríamos hasta
201Mb libres.</para>
<para>Muchas de las herramientas de administración nos dan también
estos mismos valores de memoria como por ejemplo
<command>top</command> o <command>htop</command> o desde <application>webmin</application>. Esta información se recoge del fichero
<filename>/proc/meminfo</filename> del
sistema de ficheros virtual del núcleo.</para>
      </sect2>
<sect2>
        <title>Comando <command>vmstat</command></title>
        <para>Nos da la misma información que <command>free</command>
        más algunos datos estadísticos sobre el uso de la memoria swap
        y entrada/salida con dispositivos de bloques.</para>
<para>Nos permite por parámetro lanzar la petición varias veces y cada
        cierto periodo de tiempo, así tendremos que poner
        <command>vmstat 2 10</command> para que se ejecute 10 veces
        y muestre los datos cada dos segundos.</para>
<screen><prompt>[pcm@sal]$ </prompt><userinput>vmstat 2 10</userinput>
<computeroutput>procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
 0  0  66016 113748  19112 231988    0    0     2     3   38    23  1  1 98  0
 0  0  66016 113740  19112 231988    0    0     0     0  196   460  3  0 97  0
 1  0  66016 113844  19112 231988    0    0     0     0  193   427  5  1 94  0
 0  0  66016 113608  19112 232216    0    0   114     0  206   425  7  1 92  0
 0  0  66016 113524  19112 232248    0    0    16    12  206   422  6  1 93  0
 0  0  66016 113472  19112 232248    0    0     0     0  191   433  7  0 93  0
 0  0  66016 113472  19112 232252    0    0     2     0  190   384  5  1 94  0
 0  0  66016 113468  19112 232252    0    0     0     0  195   799  4  1 95  0
 2  0  66016 113468  19112 232252    0    0     0   192  227   727  8  1 91  0
 0  0  66016 113468  19112 232252    0    0     0     0  203   260  0  0 99  0
</computeroutput><prompt>[pcm@sal]$ </prompt>
</screen>
<para>En cada linea nos va dando el estado de las variables. Serán
tantas lineas como hayamos puesto en el segundo parámetro y van
saliendo cada tantos segundo como hayamos puesto en el primero.</para>
<itemizedlist>
    <listitem><para><emphasis>procs</emphasis>: Nos da los procesos
preparados para correr en una cpu y los procesos durmiendo.</para></listitem>
<listitem><para><emphasis>memory</emphasis>: Estado de la memoria. Los
mismo datos que el comando <command>free</command>.</para></listitem>
<listitem><para><emphasis>swap</emphasis>: Nos da las páginas
intercambiadas por segundo entre la memoria física y la memoria virtual.</para></listitem>
<listitem><para><emphasis>io</emphasis>: Bloques recibidos y enviados
desde un dispositivo por segundo.</para></listitem>
<listitem><para><emphasis>system</emphasis>: Interrupciones
lanzadas y cambio de contexto por segundo.</para></listitem>
<listitem><para><emphasis>cpu</emphasis>: Porcentajes de tiempos de
cpu dedicados a sistema, a aplicaciones de usuario, sin hacer nada y
tiempo dedicado a IO (Entrada/Salida).</para></listitem>
</itemizedlist>

</sect2>
<sect2>
        <title>Comando <command>sar</command></title>
        <para>Este comando permite realizar estadísticas de muchos más
        elementos, como red, cpu, dispositivos de bloques y
        memoria. Esta muy pensado para analizar el rendimiento de
        estos elementos. Para la memoria virtual dispone de muy diversas
        variables que nos pueden ayudar a ver donde puede haber un
        problema.</para>
<para>No vamos a entrar en detalle con todas las posibilidades de este
        comando.</para>
</sect2>
</sect1>
  </chapter>