
  <chapter>
    <title>GNU/Linux</title>
    <sect1>
      <title>Un poco de historia</title>
      <para>
        A finales de la década de los 60, Ken Thompson y Dennis Ritchie, de
	los Bell Laboratories (AT&amp;T), desarrollaron un sistema
	operativo que denominaron jocosamente UNIX. Esto fue una broma,
	porque el proyecto en el que había estado trabajando antes Thompson
	se llamaba MULTICS.
      </para>
      <para>
	Era un sistema elegante y, sobre todo, sencillo. Originalmente
	corría en una máquina (DEC PDP-7) que era menos potente que cualquier
	teléfono móvil actual.
	El sistema primeramente se escribió en lenguaje ensamblador,
	específico para el PDP-7. Si bien esto le brindaba una gran
	eficiencia al código, tenía un inconveniente muy serio: el sistema
	no podía transportarse a otro ordenador distinto; si querían correr
	UNIX en un ordenador nuevo, tendrían que reescribirlo
	íntegramente. Claramente, este enfoque no era muy práctico.
	Tuvieron una idea: crear un lenguaje ensamblador 'abstracto', de
	manera que, reescribiendo UNIX en dicho lenguaje, el esfuerzo de
	transportarlo a una nueva arquitectura debería de ser mínimo.
	Así nació el lenguaje de programación C. Y, con él UNIX fue
	reescrito, convirtiéndose así en el primer sistema operativo
	transportable de la historia.
      </para>
      <sect2>
      	<title>UNIX prospera.</title>
      <para>
      	Por aquel entonces, AT&amp;T, que poseía los Bell Laboratories, no
	podía explotar comercialmente UNIX, debido a su calidad de
	monopolio. La compañía permitió su distribución a empresas y
	universidades por un precio simbólico. Esto fue un factor crucial
	en la expansión y desarrollo ulterior de UNIX. En Berkeley, por
	ejemplo, crearon su propia variante del sistema, que llamaron BSD
	(de Berkeley Software Distribution). Allí se desarrollaron
	herramientas tales como el editor 'vi', o la capa de red.
	Mientras tanto, AT&amp;T seguía trabajando en su versión,
	llamada <emphasis>System V.</emphasis> El lenguaje AWK, por ejemplo,
	fue contribuido
	en esta época. A su vez, la empresa <emphasis>SUN
	Microsystems</emphasis> desarrolló una variante llamada SunOS, que
	luego pasaría a llamarse Solaris.
	Toda esta plétora de variantes fue posible porque el código fuente
	de UNIX estaba disponible, y los mejoras realizadas podían
	compartirse, para el beneficio de los usuarios. Pero toda este
	sistema de cooperación se vería pronto amenazado.
      </para>
      </sect2>
      <sect2>
      	<title>Los tiempos oscuros.</title>
	<para>
		En el año 1984, debido a la ley antimonopolio existente en
		EE.UU., AT&amp;T fue obligada a dividirse. A partir de
		este momento, la restricción que le impedía explotar
		comercialmente UNIX desapareció, y la primera medida que se
		dejó notar fue la restricción en la distribución del código
		fuente del sistema. Esto suponía una amenaza para el
		esquema de cooperación que se había establecido. Pero había
		alguien que estaba dispuesto a intentar cambiar esto.
	</para>
	</sect2>
	<sect2>
	<title>Richard Matthew Stallman.</title>
	<para>
		En el año 1984, Stallman decidió iniciar el proyecto GNU
		(GNU's Not UNIX), un proyecto cuya finalidad era
		proporcionar un sistema operativo similar a UNIX, pero con
		una licencia que impidiese una 'vuelta a la oscuridad' como
		la que sufrió el propio UNIX. Dicha licencia se llamó GPL
		(GNU Public License) y le confiere al
		<emphasis>software</emphasis> la propiedad de ser libre y
		<emphasis>permanecer</emphasis> libre.
	</para>
	</sect2>
	<sect2>
	<title>El proyecto GNU.</title>
	<para>Stallman comenzó a construir una herramienta fundamental para
	el sistema: el <emphasis>compilador</emphasis> para el lenguaje
	C (gcc, de GNU C Compiler). Esta pieza de
	<emphasis>software</emphasis> se ha convertido probablemente en el
	nexo de unión más importante de todo el software libre. Con el
	tiempo, fue el compilador utilizado por Linus Torvalds para
	desarrollar el famoso <emphasis>kernel</emphasis> Linux. Un
	porcentaje muy alto de todo el código asociado al
	<emphasis>software</emphasis> libre, está escrito en C. Éste
	lenguaje es, pues, una <emphasis>lingua franca</emphasis>, como
	podría haber sido el esperanto, en el marco de las lenguas humanas.
	Y, gracias a Stallman, el compilador gcc (y el resto del sistema)
	es, literalmente, patrimonio de la humanidad.
	</para>
	</sect2>
    </sect1>
    <sect1>
      <title>Filosofía UNIX.</title>
      <para>
      ¿Por qué tuvo tanto éxito el enfoque de UNIX? Aparentemente, su
      simplicidad fue un factor decisivo. En su diseño, sus creadores
      antepusieron la facilidad de comprensión a la eficiencia, de manera
      que era fácil <emphasis>entender</emphasis> el código y, por ende,
      adaptarlo a las necesidades de otros. UNIX no es una reliquia del
      pasado; de hecho, la mayor parte de los sistemas operativos actuales
      son una evolución de UNIX (incluidos  MS-DOS y  Windows NT/2000/XP). Por
      eso conviene conocer los principios en los que se fundamente, puesto
      que esos mismos principios estarán presentes (de una u otra manera)
      en los sistemas que hoy podamos manejar.
      </para>
      <sect2>
      <title>Todo es un archivo.</title>
      <para>
      Esta idea, propia de la orientación a objetos (si bien la precede),
      consiste en que la unidad básica para la interacción con el sistema
      es una entidad llamada archivo que, como los archivos en papel, puede
      abrirse, leerse, avanzar hojas hacia delante y hacia atrás, escribir
      en él, y cerrarse. Este modelo tan sencillo puede parecer ingenuo,
      pero ha probado ser extremadamente valioso. Permite a un programa
      acceder transparentemente a un documento de texto o a un puerto de
      comunicaciones.
      </para>
      </sect2>
      <sect2>
      <title>La navaja suiza.</title>
      <para>
      UNIX incorpora un conjunto de herramientas que guardan cierta
      analogía con una navaja multiusos. Son simples, pero hacen
      <emphasis>muy bien</emphasis> su trabajo. En lugar de construir
      programas muy complejos, UNIX proporcionaba muchas pequeñas
      herramientas, y un esquema para poder
      <emphasis>combinarlas</emphasis> de forma efectiva. Este diseño
      escala muy bien, permitiendo al sistema crecer, incorporar nuevas
      herramientas y, a la vez, ser compatible hacia atrás.
      </para>
      </sect2>
      <sect2>
      <title>Manual en línea.</title>
      <para>
      Cuando Thompson y Ritchie estaban desarrollando UNIX, solicitaron a
      sus jefes un ordenador más potente (un DEC PDP-11), a cambio de
      desarrollar un sistema completo de tipografía (no les dijeron nada
      acerca de UNIX). Con el nuevo ordenador desarrollaron UNIX sobre C y,
      Joe F. Ossanna desarrolló troff (de <emphasis>typesetting run-off
      </emphasis>).
      Este sistema fue incluido en el propio UNIX, de manera que el manual
      del sistema fue escrito con él, estando disponible en línea desde
      entonces (a través del programa <emphasis>man</emphasis>).
      </para>
      </sect2>
    </sect1>
    <sect1>
      <title>¿Por qué llamarlo "GNU/Linux" en lugar de "linux"?</title>
      <para>
	Porque de esa manera se reconoce explícitamente que el
	sistema operativo no solo es el núcleo linux, sino muchas
	otras piezas que se escribieron con anterioridad y sin cuya
	existencia nunca habría sido posible construirlo ni tener
	algo funcional en nuestros equipos. Todas esas piezas juntas
	forman un sistema GNU, que es como se denomina al proyecto
	para construir un sistema operativo totalmente libre
	iniciado a mediados de los ochenta por la Free Software
	Foundation. De hecho, el sistema GNU podría tener en un
	futuro no muy lejano otros núcleos, como el Hurd, con los
	cuales los usuarios podrán elegir entre sistemas GNU/Linux o
	GNU/Hurd. Lo realmente importante es disponer de un sistema
	operativo libre, no el núcleo, el escritorio o el subsistema
	gráfico que lleve (y que irá cambiando con el tiempo).
      </para>
    </sect1>
    <sect1>
      <title>¿Qué son las "distribuciones" de GNU/Linux?</title>
      <para>
	Una distribución es un modo de facilitar la instalación, la
	configuración y el mantenimiento de un sistema GNU/Linux. Al
	principio, las distribuciones se limitaban a recopilar
	software libre, empaquetarlo en disquetes o CD-ROM y
	redistribuirlo o venderlo.
      </para>
      <para>
	Ahora las grandes distribuciones -RedHat, SuSE, Caldera,
	Mandrake, Corel Linux, TurboLinux...- son potentes empresas
	que compiten entre sí por incluir el último software, a veces
	también software propietario, con instalaciones gráficas
	capaces de autodetectar el hardware y que instalan un sistema
	entero en unos cuantos minutos sin apenas preguntas.
      </para>
      <para>
	Entre las distribuciones de GNU/Linux, destaca el proyecto
	Debian/GNU. Debian nace como una iniciativa no comercial de la
	FSF, aunque luego se independiza de ésta y va más allá del
	propio sistema GNU/Linux. Es la única de las grandes
	distribuciones que no tiene intereses comerciales ni
	empresariales. Son sus propios usuarios, muy activos, quienes
	mantienen la distribución de modo comunitario, incluidas todas
	sus estructuras de decisión y funcionamiento. Su objetivo es
	recopilar, difundir y promover el uso del software
	libre. Reúne el mayor catálogo de software libre, todos ellos
	probados, mantenidos y documentados por algún desarrollador
	voluntario.
      </para>
      <para>
	En una distribución hay todo el software necesario para
	instalar en un ordenador personal; servidor, correo,
	ofimática, fax, navegación de red, seguridad, etc.
      </para>
    </sect1>
    <sect1>
      <title>Documentación</title>
      <itemizedlist>
	<listitem>
	  <para>
	    <ulink url="http://tldp.org/">
	      The Linux Documentation Project
	    </ulink>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <ulink url="http://es.tldp.org/">
	      TLDP-ES/LuCAS
	    </ulink>
	    </para>
	</listitem>
	<listitem>
	  <para>
	    <ulink url="http://laespiral.org/documentacion.html">
	      La Espiral
	    </ulink>
	    </para>
	</listitem>
	<listitem>
	  <para>
	    <ulink url="http://www.debian.org/doc/index.es.html">
	      Debian: Documentación
	    </ulink>
	  </para>
	</listitem>
      </itemizedlist>
    </sect1>
    
  </chapter>
  
  <!-- Local Variables: -->
  <!-- sgml-parent-document: "Introduccion.sgml" -->
  <!-- End: -->
  
