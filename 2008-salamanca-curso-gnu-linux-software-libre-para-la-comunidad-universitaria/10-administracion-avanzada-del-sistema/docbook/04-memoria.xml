<?xml version='1.0' encoding='utf-8'?>
<!-- CAPITULO 2 -->
  <chapter>
    <title>Gesti&oacute;n de Memoria</title>
    <para>Linux es un sistema operativo con una gesti&oacute;n de memoria
    que esta preparada para memoria virtual y sistemas
    multiprocesador.</para>
    <sect1>
      <title>Memoria f&iacute;sica</title>
      <para>La memoria f&iacute;sica es la memoria RAM que dispone el
      ordenador.</para>
<para>Esta memoria es el espacio que est&aacute;n utilizando los procesos
      que se est&aacute;n ejecutando. En Linux tambi&eacute;n se utiliza la memoria f&iacute;sica para tener cache de los datos
    de los dispositivos de i/o, memoria compartida y buffers de intercambio.</para>
<para>Al ser un recurso caro, pero r&aacute;pido, Linux va a intentar
      utilizar el m&aacute;ximo de ella, por ello cuando la memoria no es
      utilizada por las aplicaciones, es decir los procesos lanzados
      no ocupan toda la memoria, utiliza toda la que puede como cache
      de datos contra otros dispositivos m&aacute;s lentos como los discos
      duros. Cuando las aplicaciones vayan requiriendo m&aacute;s memoria
      estas caches ser&aacute;n m&aacute;s peque&ntilde;as.</para>
<para>La memoria est&aacute; paginada y as&iacute; poder llevar partes a la memoria
      virtual. Tambi&eacute;n puede llevar procesos enteros.</para>
    </sect1>
    <sect1>
      <title>Memoria virtual</title>
      <para>Cuando alg&uacute;n espacio de memoria no es utilizado puede ser
      llevado a un dispositivo de almacenamiento. Con <command>free</command> podemos ver
      su utilizaci&oacute;n actual.</para>
<para>La memoria swap debemos indicar nosotros en donde queremos
      ubicarla. Para ello podemos dedicar una partici&oacute;n entera de
      nuestros discos duros o bien crear un fichero en uno de los
      sistemas de ficheros que lo soporten. Debemos tener en cuenta
      que es m&aacute;s &oacute;ptimo la utilizaci&oacute;n de una partici&oacute;n pero para ello
      debemos tener el espacio reservado para la creaci&oacute;n de la partici&oacute;n.</para>
      <sect2>
        <title>Creaci&oacute;n de Swap</title>
        <para>Para crear una partici&oacute;n de swap debemos utilizar el
        programa de particiones.</para>
<screen><prompt>[root@sal]$ </prompt><userinput>fdisk</userinput>
<computeroutput>Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
</computeroutput>
</screen>
<para>Crearemos la partici&oacute;n del tipo y tama&ntilde;o que deseemos y lo &uacute;nico
que cambiaremos con la opci&oacute;n t es el id de la partici&oacute;n al tipo
82. Nos debe quedar algo as&iacute;:</para>
<screen>
<computeroutput>
/dev/hda3           14552       14593      337365   82  Linux swap / Solaris
</computeroutput>
</screen>
<para>Si bien queremos crear un fichero de swap lo haremos con el
siguiente comando.</para>
<screen><prompt>[root@sal]$ </prompt><userinput>mkswap /file-swap 1024</userinput>
<computeroutput>Setting up swapspace, size = 1044480 
	bytes
</computeroutput>
</screen>
<para>Ya tenemos creada la swap ahora hay que indicar al sistema que
la utilice.</para>
      </sect2>
      <sect2>
        <title>Usando el Swap</title>
        <para>Para empezar a utilizarla ejecutamos el comando swapon.</para><screen><prompt>[root@sal]$ </prompt><userinput>swapon /file-swap</userinput>
</screen>
<para>Evidentemente para no estar haciendo esto cada vez que
arrancamos se puede configurar en el fichero
<filename>/etc/fstab</filename> que es donde est&aacute;n las particiones a
montar (y ficheros swap) en el arranque.</para>
<para>Una vez puesta a disposici&oacute;n del sistema el gestor de memoria la
utilizar&aacute; cuando lo considere necesario.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Cache y Buffers</title>
      <para>El comando <command>free</command> tambi&eacute;n nos da informaci&oacute;n de cuanta
      memoria se esta dedicando a caches, buffers y memoria compartida.</para>
<para>La cache es utiliza para guardar temporalmente informaci&oacute;n que
      esta en los dispositivos de I/O que pueden volver a
      necesitarse. Linux intentar&aacute; utilizar el m&aacute;ximo de memoria
      f&iacute;sica para este concepto ya que cuanto m&aacute;s tenga m&aacute;s
      posibilidades de que algo que se le pida de nuevo lo tenga ya en
      las caches. Autom&aacute;ticamente har&aacute; las caches m&aacute;s peque&ntilde;as si la
      memoria es necesitada por las aplicaciones.</para>
    </sect1>
<sect1>
      <title>Herramientas</title>
<para>Para ver el uso y an&aacute;lisis de la memoria el
administrador dispone de algunas herramientas.</para>
<para>El rendimiento de la memoria virtual es muy importante ya que cuando
      vayamos a hacer uso de ella es porque al sistema se le esta
      requiriendo un esfuerzo mayor y no queremos que sea el cuello de
      botella. Por ello las herramientas nos deben dar las
estad&iacute;sticas de la utilizaci&oacute;n de la memoria.</para>
      <sect2>
        <title>Comando <command>free</command></title>
        <para>Para ver el estado de la memoria actual tenemos el
        comando <command>free</command>.</para>
<screen><prompt>[pcm@sal]$ </prompt><userinput>free -m</userinput>
<computeroutput>             total       used       free     shared    buffers     cached
Mem:           504        491         12          0         41        147
-/+ buffers/cache:        302        201
Swap:          329         51        277
</computeroutput><prompt>[pcm@sal]$ </prompt>
</screen>
<para>La primera linea nos est&aacute; dando como realmente se esta utilizando la
memoria f&iacute;sica, y la segunda cuanta memoria hay libre desde
el punto de vista de las aplicaciones. La &uacute;ltima linea contiene la
utilizaci&oacute;n de la memoria swap.</para>
<para>En detalle, este sistema tiene 504Mb de memoria de los cuales est&aacute;n usados
491Mb y 12Mb libres. De los usados 302Mb por las aplicaciones, 41Mb de
memoria compartida y 147Mb para buffers y caches. Como la memoria para
buffers y cache es adaptable seg&uacute;n las necesidades, tendr&iacute;amos hasta
201Mb libres.</para>
<para>Muchas de las herramientas de administraci&oacute;n nos dan tambi&eacute;n
estos mismos valores de memoria como por ejemplo
<command>top</command> o <command>htop</command> o desde <application>webmin</application>. Esta informaci&oacute;n se recoge del fichero
<filename>/proc/meminfo</filename> del
sistema de ficheros virtual del n&uacute;cleo.</para>
      </sect2>
<sect2>
        <title>Comando <command>vmstat</command></title>
        <para>Nos da la misma informaci&oacute;n que <command>free</command>
        m&aacute;s algunos datos estad&iacute;sticos sobre el uso de la memoria swap
        y entrada/salida con dispositivos de bloques.</para>
<para>Nos permite por par&aacute;metro lanzar la petici&oacute;n varias veces y cada
        cierto periodo de tiempo, as&iacute; tendremos que poner
        <command>vmstat 2 10</command> para que se ejecute 10 veces
        y muestre los datos cada dos segundos.</para>
<screen><prompt>[pcm@sal]$ </prompt><userinput>vmstat 2 10</userinput>
<computeroutput>procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
 0  0  66016 113748  19112 231988    0    0     2     3   38    23  1  1 98  0
 0  0  66016 113740  19112 231988    0    0     0     0  196   460  3  0 97  0
 1  0  66016 113844  19112 231988    0    0     0     0  193   427  5  1 94  0
 0  0  66016 113608  19112 232216    0    0   114     0  206   425  7  1 92  0
 0  0  66016 113524  19112 232248    0    0    16    12  206   422  6  1 93  0
 0  0  66016 113472  19112 232248    0    0     0     0  191   433  7  0 93  0
 0  0  66016 113472  19112 232252    0    0     2     0  190   384  5  1 94  0
 0  0  66016 113468  19112 232252    0    0     0     0  195   799  4  1 95  0
 2  0  66016 113468  19112 232252    0    0     0   192  227   727  8  1 91  0
 0  0  66016 113468  19112 232252    0    0     0     0  203   260  0  0 99  0
</computeroutput><prompt>[pcm@sal]$ </prompt>
</screen>
<para>En cada linea nos va dando el estado de las variables. Ser&aacute;n
tantas lineas como hayamos puesto en el segundo par&aacute;metro y van
saliendo cada tantos segundo como hayamos puesto en el primero.</para>
<itemizedlist>
    <listitem><para><emphasis>procs</emphasis>: Nos da los procesos
preparados para correr en una cpu y los procesos durmiendo.</para></listitem>
<listitem><para><emphasis>memory</emphasis>: Estado de la memoria. Los
mismo datos que el comando <command>free</command>.</para></listitem>
<listitem><para><emphasis>swap</emphasis>: Nos da las p&aacute;ginas
intercambiadas por segundo entre la memoria f&iacute;sica y la memoria virtual.</para></listitem>
<listitem><para><emphasis>io</emphasis>: Bloques recibidos y enviados
desde un dispositivo por segundo.</para></listitem>
<listitem><para><emphasis>system</emphasis>: Interrupciones
lanzadas y cambio de contexto por segundo.</para></listitem>
<listitem><para><emphasis>cpu</emphasis>: Porcentajes de tiempos de
cpu dedicados a sistema, a aplicaciones de usuario, sin hacer nada y
tiempo dedicado a IO (Entrada/Salida).</para></listitem>
</itemizedlist>

</sect2>
<sect2>
        <title>Comando <command>sar</command></title>
        <para>Este comando permite realizar estad&iacute;sticas de muchos m&aacute;s
        elementos, como red, cpu, dispositivos de bloques y
        memoria. Esta muy pensado para analizar el rendimiento de
        estos elementos. Para la memoria virtual dispone de muy diversas
        variables que nos pueden ayudar a ver donde puede haber un
        problema.</para>
<para>No vamos a entrar en detalle con todas las posibilidades de este
        comando.</para>
</sect2>
</sect1>
  </chapter>

