<?xml version='1.0' encoding='utf-8'?>
  <chapter>
	  <title>Principios de la Web</title>
    <section>
      <title>Principios de la programaci&oacute;n web.</title>
      <para>Siempre que nos vayamos a plantear el desarrollo de una
      aplicaci&oacute;n web, debemos de disponer de una serie
      de conocimientos te&oacute;rico- pr&aacute;cticos
      base, que son:</para>
      <itemizedlist>
        <listitem>
          <para>Saber programar en HTML.</para>
        </listitem>
        <listitem>
          <para>Saber programar en CSS.</para>
        </listitem>
        <listitem>
          <para>Saber programar en PHP.</para>
        </listitem>
        <listitem>
          <para>Saber consultar BBDD con SQL.</para>
        </listitem>
      </itemizedlist>
      <para>Como estos conocimientos pueden echar para
      atr&aacute;s en primera instancia, se pretende, mediante
      ejemplos fomentar el aprendizaje del desarrollo de este tipo
      de aplicaciones. Lo &uacute;nico que necesita es tener
      instalado y confgiurada una plataforma LAMP. Debe tomarse en
      consideraci&oacute;n que los ejemplos aqu&iacute;
      indicados se han colocado &uacute;nicamente con fines
      educativos y que por lo tanto no deben tomarse como ejemplo
      de codificaci&oacute;n de calidad en PHP.</para>
    </section>
    <section>
      <title>La p&aacute;gina principal</title>
      <para>Como primer reto tenemos el de construir una
      p&aacute;gina principal. Para este paso necesimos
      m&aacute;s cosas de las que pensamos en un primer
      momento. Los pasos a dar son los siguientes:</para>
      <itemizedlist>
        <listitem>
          <para>Saber el directorio raiz del servidor web. Por
          defecto en OpenSuse 10.2 es /srv/www/htdocs</para>
        </listitem>
        <listitem>
          <para>Crear un directorio para almacenar los ficheros de
          la aplicaci&oacute;n. Para ello en Openoffice 10.2
          debemos ejecutar como root el comando:</para>
          <screen>
            <prompt>[root@Glisa-host htdocs]#</prompt>
            <userinput>mkdir /srv/www/htdocs/ejercicios</userinput>
          </screen>
        </listitem>
        <listitem>
          <para>Modificar los permisos del directorio para permitir
          la escritura de todos los usuarios (no es muy seguro pero
          s&iacute; funcional). Para ello ejecutaremos:</para>
          <screen>
            <prompt>[root@Glisa-host htdocs]#</prompt>
            <userinput>chmod 777
            /srv/www/htdocs/ejercicios</userinput>
          </screen>
          <para>Una vez cambiados los permisos ya puede utilizar su
          editor favorito para realizar todas la operaciones
          necesarias con ficheros y carpetas. A Partir de este
          momento siempre que se diga crear un fichero o carpeta
          ser&aacute; respecto al directorio:
          /srv/www/htdocs</para>
        </listitem>
        <listitem>
          <para>Creamos un fichero php principal para el sitio web,
          que se llame index.php , y copiamos el siguiente
          contenido:</para>
          <informalexample>

            <programlisting role="HTML">
              &#60;html&#62;
                &#60;head&#62;
                  &#60;TITLE&#62;T&iacute;tulo Provisional&#60;&#47;TITLE&#62;
                &#60;&#47;head&#62;
                &#60;body&#62;
                  &#60;p&#62;Mi Primer HTML&#60;&#47;p&#62;
                &#60;&#47;body&#62;
              &#60;&#47;html&#62;
            </programlisting>
          </informalexample>
          <para>Mediante este ejemplo puede ver c&oacute;mo se
          estructura un fichero html, no se ha metido nada de
          c&oacute;digo php para no complicar m&aacute;s
          las cosas.</para>
        </listitem>
        <listitem>
          <para>Crear un fichero css y enlazarlo con el fichero
          index.php . El fichero css va a ayudar a que cambiar el
          aspecto de la aplicaci&oacute;n de una manera
          automatizada para todos los ficheros .php . El contenido
          del CSS ser&aacute; similar al siguiente:</para>
          <informalexample>
            <programlisting role="CSS">
		&#47;* Definici&oacute;n de estilos en un archivo aparte *&#47; 
		&#47;* Estilo para el documento *&#47; 
		BODY {font-family:Verdana,sans-serif;font-size:20pt;margin-left:0.25in; margin-right:0.25in} 
		&#47;* Estilo para la cabecera de nivel 2 *&#47; 
		P.cabecera {font-family:Verdana,sans-serif;font-size:15pt;color:red} 
		&#47;* Estilos para otras etiquetas *&#47; 
		TD.titulo {font-family:Verdana,sans-serif;font-size:20;color:red} 
		TD.linea {font-family:Verdana,sans-serif;font-size:18;color:black} 
		:link { color: rgb(0, 0, 153) } &#47;* for unvisited links *&#47; 
		:visited { color: rgb(153, 0, 153) } &#47;* for visited links *&#47; 
		a:active { color: rgb(255, 0,102) } &#47;* when link is clicked *&#47; 
		a:hover { color: rgb(0, 96, 255) } &#47;* when mouse is over link*&#47;
		</programlisting>
          </informalexample>
          <para>Mediante este ejemplo puede ver c&oacute;mo se
          aplican modificaciones sobre atributos de tags HTML
          mediante la definici&oacute;n de una clase CSS. Para
          Enlazar el fichero en el fichero .php se har&iacute;a
          las siguientes modificaciones en el index.php:</para>
          <informalexample>

            <programlisting role="HTML">
              &#60;html&#62;
                &#60;head&#62;
                  &#60;TITLE&#62;T&iacute;tulo Provisional&#60;&#47;TITLE&#62;
                  &#60;link REL="stylesheet" TYPE="text&#47;css"
                  HREF="estilo.css" &#47;&#62;
                &#60;&#47;head&#62;
                &#60;body&#62;
                  &#60;p CLASS="cabecera"&#62;Mi Primer HTML&#60;&#47;p&#62;
                &#60;&#47;body&#62;
              &#60;&#47;html&#62;
            </programlisting>
          </informalexample>
          <para>Como puede ver se ha a&ntilde;adido un nuevo
          tag llamado LINK dentro de la cabecera del fichero .php
          que indica donde se encuentra el fichero .css , si se da
          cuenta, el fichero no tiene ning&uacute;n tipo de
          ruta definida, s&oacute;lo se identifica el nombre
          del fichero, ya que, dicho fichero se encuentra en el
          mismo directorio que el fichero index.php.
          Tambi&eacute;n se puede ver como en el tag 
          &#60;p &#47;&#62;se ha a&ntilde;adido una nueva propiedad
          denominada Class al que le hemos puesto el estilo
          definido como "cabecera" para el tag 
          &#60;p &#47;&#62;en el fichero estilo.css</para>
        </listitem>
        <listitem>
          <para>Una vez definida la p&aacute;gina principal y
          aplicado el estilo, necesita probar que funciona
          correctmente. Para lo cual abra su navegador favorito e
          introduzca la siguiente URL:
          http://localhost/ejercicios/index.php .
          Deber&iacute;a ver la P&aacute;gina definida en
          el fichero index.php. A partir de este momento siempre
          que se vaya a visualizar una p&aacute;gina, asuma que
          la direcci&oacute;n URL siempre empezar&aacute;
          por http://localhost/ejemplos/</para>
        </listitem>
        <listitem>
          <para>Una vez comprobado que la p&aacute;gina
          est&aacute; correctamente definida y verificada,
          resta pensar qu&eacute; datos son los que necesitamos
          manejar. Este tipo de decisiones son las que se suelen
          realizar en la fase de an&aacute;lisis de un proyecto
          y dan normalmente como resultado un diagrama de entidad
          relaci&oacute;n, que una vez pasado a una base de
          datos nos resulta un fichero .sql o fichero de datos de
          una base de datos. A continuaci&oacute;n se muestra
          el fichero sql resultante del an&aacute;lisis de una
          aplicaci&oacute;n de gesti&oacute;n de
          matriculaciones:</para>
          <informalexample>
            <programlisting role="SQL">-- phpMyAdmin SQL Dump --
            version 2.6.4-pl4 -- http://www.phpmyadmin.net -- --
            Servidor: localhost -- Tiempo de generaci&oacute;n:
            26-01-2006 a las 17:18:36 -- Versi&oacute;n del
            servidor: 5.0.18 -- Versi&oacute;n de PHP:
            5.1.2-1ubuntu1 -- -- Base de datos: `cfie` -- --
            --------------------------------------------------------
            -- -- Estructura de tabla para la tabla `alumnos` --
            DROP TABLE IF EXISTS `alumnos`; CREATE TABLE `alumnos`
            ( `id` int(10) unsigned NOT NULL auto_increment,
            `nombre` varchar(100) NOT NULL, `dni` varchar(10) NOT
            NULL, `id_tipo_de_alumno` int(11) unsigned NOT NULL,
            PRIMARY KEY (`id`) ) ENGINE=MyISAM DEFAULT
            CHARSET=latin1 AUTO_INCREMENT=6 ; -- -- Volcar la base
            de datos para la tabla `alumnos` -- INSERT INTO
            `alumnos` (`id`, `nombre`, `dni`, `id_tipo_de_alumno`)
            VALUES (5, 'David Vaquero', '7077052A', 6); --
            --------------------------------------------------------
            -- -- Estructura de tabla para la tabla `asignaturas`
            -- DROP TABLE IF EXISTS `asignaturas`; CREATE TABLE
            `asignaturas` ( `id` int(10) unsigned NOT NULL
            auto_increment, `nombre` varchar(100) NOT NULL, PRIMARY
            KEY (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=latin1
            AUTO_INCREMENT=4 ; -- -- Volcar la base de datos para
            la tabla `asignaturas` -- INSERT INTO `asignaturas`
            (`id`, `nombre`) VALUES (3, 'Algoritmia'); INSERT INTO
            `asignaturas` (`id`, `nombre`) VALUES (2, 'POO'); --
            --------------------------------------------------------
            -- -- Estructura de tabla para la tabla `matriculas` --
            DROP TABLE IF EXISTS `matriculas`; CREATE TABLE
            `matriculas` ( `id_mat` int(10) unsigned NOT NULL
            auto_increment, `id_alum` int(10) unsigned NOT NULL,
            `id_asig` int(10) unsigned NOT NULL, PRIMARY KEY
            (`id_mat`) ) ENGINE=MyISAM DEFAULT CHARSET=latin1
            AUTO_INCREMENT=23 ; -- -- Volcar la base de datos para
            la tabla `matriculas` -- INSERT INTO `matriculas`
            (`id_mat`, `id_alum`, `id_asig`) VALUES (10, 1, 3);
            INSERT INTO `matriculas` (`id_mat`, `id_alum`,
            `id_asig`) VALUES (18, 1, 2); INSERT INTO `matriculas`
            (`id_mat`, `id_alum`, `id_asig`) VALUES (16, 1, 2);
            INSERT INTO `matriculas` (`id_mat`, `id_alum`,
            `id_asig`) VALUES (17, 1, 3); INSERT INTO `matriculas`
            (`id_mat`, `id_alum`, `id_asig`) VALUES (22, 5, 2);
            INSERT INTO `matriculas` (`id_mat`, `id_alum`,
            `id_asig`) VALUES (21, 5, 3); --
            --------------------------------------------------------
            -- -- Estructura de tabla para la tabla
            `tipos_de_alumno` -- DROP TABLE IF EXISTS
            `tipos_de_alumno`; CREATE TABLE `tipos_de_alumno` (
            `id_tipo_de_alumno` int(11) unsigned NOT NULL
            auto_increment, `nombre` varchar(50) NOT NULL, PRIMARY
            KEY (`id_tipo_de_alumno`) ) ENGINE=MyISAM DEFAULT
            CHARSET=latin1 AUTO_INCREMENT=7 ; -- -- Volcar la base
            de datos para la tabla `tipos_de_alumno` -- INSERT INTO
            `tipos_de_alumno` (`id_tipo_de_alumno`, `nombre`)
            VALUES (6, 'descarriado'); INSERT INTO
            `tipos_de_alumno` (`id_tipo_de_alumno`, `nombre`)
            VALUES (5, 'trasto'); INSERT INTO `tipos_de_alumno`
            (`id_tipo_de_alumno`, `nombre`) VALUES (4,
            'aplicado');</programlisting>
          </informalexample>
          <para>Como puede verse se han definido varias tablas y
          algunos datos ya introducidos para facilitar el
          aprendizaje.</para>
        </listitem>
        <listitem>
          <para>Ahora lo que debe hacer es crear la base de datos y
          ejecutar el fichero .sql para definir las tablas y los
          datos de las tablas en dicha base de datos, esto lo puede
          hacer f&aacute;cilmente mediante PhpMyAdmin. No se
          olvide de apuntar los datos de conexi&oacute;n a la
          base de datos: servidor base de datos, nombre de la base
          de datos, nombre de usuario y contrase&ntilde;a; los
          necesitar&aacute; m&aacute;s tarde para crear el
          fichero de configuraci&oacute;n config.php.</para>
        </listitem>
        <listitem>
          <para>Crear un directorio por cada entidad mediante el
          comando:</para>
          <screen>
            <prompt>[root@Glisa-host ejercicios]#</prompt>
            <userinput>mkdir entidad</userinput>
          </screen>
        </listitem>
        <listitem>
          <para>Modificar los permisos de cada directorio
          creado:</para>
          <screen>
            <prompt>[root@Glisa-host ejercicios]#</prompt>
            <userinput>chmod 777 entidad</userinput>
          </screen>
        </listitem>
        <listitem>
          <para>Una vez que est&aacute;n definidos los datos a
          manejar podemos finalizar el fichero index.php
          introduciendo los enlaces a los ficheros index.php que
          crearemos en cada nuevo directorio. A
          continuaci&oacute;n ver&aacute; el fichero
          index.php definitivo:</para>
          <informalexample>
            <programlisting role="HTML">
              &#60;html&#62;
                &#60;head&#62;
                  &#60;TITLE&#62;T&iacute;tulo Provisional&#60;&#47;TITLE&#62;
                  &#60;LINK REL="stylesheet" TYPE="text&#47;css"
                  HREF="estilo.css" &#47;&#62;
                &#60;&#47;head&#62;
                &#60;body&#62;
                  &#60;A href="alumnos&#47;index.php" name="alumnos"&#62;
                  Gesti&oacute;n de alumnos&#60;&#47;A&#62;
                  &#60;br &#47;&#62;
                  &#60;A href="asignaturas&#47;index.php"
                  name="asignaturas"&#62;Gesti&oacute;n de
                  asignaturas&#60;&#47;A&#62;
                  &#60;BR &#47;&#62;
                  &#60;A href="tipos_de_alumno&#47;index.php"
                  name="tipos_de_alumno"&#62;Gesti&oacute;n de
                  tipos de alumno&#60;&#47;A&#62;
                  &#60;BR &#47;&#62;
                &#60;&#47;body&#62;
              &#60;&#47;html&#62;
            </programlisting>
          </informalexample>
          <para>Como puede ver se han a&ntilde;adido tres
          enlaces cada uno de ellos a un index.php que permite la
          gesti&oacute;n de cada una de las entidades del
          modelo de datos.</para>
        </listitem>
        <listitem>
          <para>Compruebe que se visualiza correctamente, actualice
          en su navegador web el index.php de la
          aplicaci&oacute;n.</para>
        </listitem>
        <listitem>
          <para>A continuaci&oacute;n definiremos nuestro
          primer fichero con c&oacute;digo PHP, el config.php,
          lo crearemos en el directorio donde se encuentra el
          index.php de la p&aacute;gina principal y aplicarle
          los permisos necesarios(siempre que cree in fichero
          recuerde aplicarle los permisos). El contenido del
          fichero deber&iacute;a ser similar al
          siguiente:</para>
          <informalexample>
            <programlisting role="PHP">
              &#60;&#63;php
              &#47;&#47;ponemos el nombre del servidor de mysql
              $server= 'localhost';
              &#47;&#47;ponemos el nombre de la bbdd
              $database='ejemplo';
              &#47;&#47;ponemos el nombre del usuario
              $user='root';
              &#47;&#47;ponemos la contrase&ntilde;a del usuario
              $passwd='micontrasegna';
              &#63;&#62;
            </programlisting>
          </informalexample>
          <para>Substituya los valores entrecomillados, por los
          datos que ha anotado previamente. Como puede ver el
          fichero empieza con la identificaci&oacute;n del
          lenguaje de script php y termina con la
          finalizaci&oacute;n de la parte PHP del fichero, en
          medio, disponemos de comentarios y asignaciones de
          variables, como puede ver todas las variables empiezan
          con el s&iacute;mbolo $, la asignaciones en
          s&iacute; mismas son muy parecidas a otros lenguajes
          de programaci&oacute;n. Y como puede observar toda
          sentencia se finaliza con el s&iacute;mbolo ;</para>
        </listitem>
      </itemizedlist>
      <para>Con esto dispone ya de los elementos para empezar
      construir su aplicaci&oacute;n web. Ahora se
      proceder&aacute; a explicar el funcionamiento de los
      ficheros .php que manejan una entidad.</para>
    </section>
    <section>
      <title>El manejo de una tabla sencilla.</title>
      <para>Vamos a empezar con una tabla sencilla para facilitar
      su comprensi&oacute;n, la de asignaturas. Empezaremos por
      crear el fichero index.php. Que ser&iacute;a
      as&iacute;:</para>
      <informalexample>
        <programlisting role="PHP">
          &#60;&#63;php
          &#47;&#47;incluimos el fichero config.php para coger los datos de la conexi&oacute;n
          include_once('..&#47;config.php');
          &#47;&#47;cogemos las variables de las coneci&oacute;n para que se puedan utilizar en el script
          global $server, $database, $user, $passwd;
          &#47;&#47;abrimos la conexi&oacute;n
          $conexion = mysql_connect($server,$user,$passwd);
          &#47;&#47;elegimos la BBDD
          mysql_select_db ($database, $conexion) OR die ("No se puede conectar");
          &#47;&#47;rellenamos la consulta, cambiar alumnos por el nombre de la tabla a listar
          $sql="SELECT * FROM asignaturas";
          &#47;&#47;echo $sql;
          &#47;&#47;re realiza la consulta
          $result=mysql_query($sql,$conexion);

          &#63;&#62;
          &#60;html&#62;
            &#60;head&#62;
              &#60;TITLE&#62;Listado de Asignaturas&#60;&#47;TITLE&#62;
              &#60;LINK REL="stylesheet" TYPE="text&#47;css"
              HREF="..&#47;estilo.css" &#47;&#62;
            &#60;&#47;head&#62;
            &#60;body&#62;
              &#60;A href="..&#47;index.php" name="alumnos"&#62;Inicio&#60;&#47;A&#62;
              &#60;br &#47;&#62;
              &#60;A href="..&#47;alumnos&#47;index.php" name="alumnos"&#62;
              Alumnos&#60;&#47;A&#62;
              &#60;br &#47;&#62;
              &#60;A href="index.php" name="asignaturas"&#62;
              Asignaturas&#60;&#47;A&#62;
              &#60;BR &#47;&#62;
              &#60;A href="..&#47;tipos_de_alumno&#47;index.php"
              name="tipos_de_alumno"&#62;Tipo de alumno&#60;&#47;A&#62;
              &#60;br &#47;&#62;
              &#60;p&#62;Listado de Asignaturas.&#60;&#47;p&#62;&#60;&#63;php
              &#47;&#47;aqui se coloca el enlace que permite a&ntilde;adir una asignatura
              echo "&#60;p&#62;&#60;A HREF='nuevo.php'&#62;Nuevo&#60;&#47;A&#62;&#60;&#47;p&#62;";
              &#47;&#47;comienza el formulario que permite la busqueda
              echo "&#60;form method=\"post\" action=\"buscar.php\"&#62;";
              &#47;&#47;aqui coloca una caja de texto donde se escribe la busqueda
              echo "&#60;input type=\"text\" name=\"busqueda\" size=20 maxlength =20&#62;";
              &#47;&#47;aqui se coloca el boton a pulsar cuando se rellene la busqueda
              echo "&#60;input type=\"submit\" name=\"buscar\" value=\"Buscar\"&#62;&#60;&#47;form&#62;&#60;br&#62;";
              &#47;&#47;se cogen los primeros resultados del listado
              if($row= mysql_fetch_array($result)){
              &#47;&#47;si hay algun registro inicia la tabla que muestra los resultados del listado
              echo "&#60;TABLE BORDER='1'&#62;";
              &#47;&#47;coloca la cabecera de la tabla, aqui se substituiria con los campos de la tabla
              &#47;&#47;colocando mas &#60;TD  CLASS=\"titulo\"&#62;campo&#60;&#47;TD&#62; dependiendo de los campos que haya
              echo "&#60;TR&#62;&#60;TD CLASS=\"titulo\"&#62;Nombre&#60;&#47;TD&#62;&#60;TD colspan=3  CLASS=\"titulo\"&#62;Opciones&#60;&#47;TD&#62;&#60;&#47;TR&#62;";
              &#47;&#47;empieza el bucle que coloca las l&iacute;neas del listado
              DO
              {
              &#47;&#47;Coloca una l&iacute;nea en el listado
              &#47;&#47;si hay mas campos se ponen m&aacute;s &#60;TD width=300 CLASS=\"linea\"&#62;".$row["nombre_campo"]."&#60;&#47;TD&#62;
              &#47;&#47;inicia la ĺinea
              echo "&#60;TR&#62;";
              &#47;&#47;pone el nombre del alumno
              echo "&#60;TD width=300 CLASS=\"linea\"&#62;".$row["nombre"]."&#60;&#47;TD&#62;";
              &#47;&#47;pone los enlaces de ver, editar y borrar asignaturas
              echo "&#60;TD CLASS=\"linea\"&#62;&#60;A HREF=ver.php&#63;id=".$row['id']."&#62;Ver&#60;&#47;A&#62;&#60;&#47;TD&#62;";
              echo "&#60;TD width=50 CLASS=\"linea\"&#62;&#60;A HREF=editar.php&#63;id=".$row['id']."&#62;Editar&#60;&#47;A&#62;&#60;&#47;TD&#62;";
              echo "&#60;TD width=50 CLASS=\"linea\"&#62;&#60;A HREF=borrar.php&#63;id=".$row['id']."&#62;Borrar&#60;&#47;A&#62;&#60;&#47;TD&#62;";
              &#47;&#47;termina la fila
              echo "&#60;&#47;TR&#62;";
              }
              &#47;&#47;comprueba si hay mas registros que colocar
              WHILE ($row=mysql_fetch_array($result));
              &#47;&#47;si no hay mas registros termina la tabla
              echo "&#60;&#47;TABLE&#62;&#60;br&#62;";
              &#47;&#47;coloca el enlace que permite volver a listar
              echo "&#60;A HREF=\"index.php\"&#62;Volver&#60;&#47;A&#62;";
              }else{
              &#47;&#47;si no hay registros en la tabla informa de ello
              echo "No hay ninguna asignatura en la BBDD&#60;BR&#62;";
              &#47;&#47;coloca el enlace que permite volver a listar
              echo "&#60;A HREF=\"index.php\"&#62;Volver&#60;&#47;A&#62;";

              }
              &#47;&#47;termina el script
              &#63;&#62;
            &#60;&#47;body&#62;
          &#60;&#47;html&#62;
        </programlisting>
      </informalexample>
      <para>Como puede verse en el fichero hay 4 partes bien
      diferenciadas, que se repetir&aacute;n en todos los
      ficheros de index.php (de listado): una definidas como parte
      de un script PHP que consulta los datos a la tabla, otra
      donde hay c&oacute;digo HTML de la cabecera del fichero
      HTML resultante, otra parte en PHP que permite generar la
      tabla con los datos y la &uacute;ltima donde se cierran
      los tags HTML de la p&aacute;gina web.</para>
      <para>En la primera parte se incluye el fichero ../config.php
      que es donde centralizamos los datos de
      configuraci&oacute;n para poder acceder a la base de
      datos. Despu&eacute;s de realizar la conexi&oacute;n
      y seleccionar la BBDD se almacena en la variable $sql la
      consulta a realizar. Para a continuaci&oacute;n ejecutar
      la consulta en la base de datos y almacenar en la variable
      $result los resultados de la consulta.</para>
      <para>En la segunda parte se definen los tags HTML generales
      y el del men&uacute; de la Aplicaci&oacute;n. El
      enlace a la p&aacute;gina principal y al resto de
      directorios generados.</para>
      <para>En la tercera parte, se pude ver c&oacute;mo
      generar el c&oacute;digo HTML mediante los echos. en al
      primera secci&oacute;n se pude ver c&oacute;mo se
      genera el cuadro de b&uacute;squeda, en la segunda parte
      se puede ver c&oacute;mo utilizar la sentencia
      condicional con sus dos casos: el primero en el que hay datos
      en el resultado y el segundo cuando no hay resultados a la
      consulta. En el primer caso se genera la cabecera de una
      tabla y luego se entra en un bucle para cada uno de los
      resultados(filas), se ponen celdas cada fila con cada uno de
      los valores (en este caso un s&oacute;lo campo
      registrable el nombre) y luego colcoa las operaciones
      t&iacute;picas Ver, Editar y Borrar; cierra la fila y
      luego cierra la tabla. En el segundo caso simplemente saca un
      mensaje de que no hay asignaturas disponibles.</para>
      <para>Merece una especial menci&oacute;n la manera de
      resulver las llamadas a cada una de las operaciones. Por el
      funcionamiento de una aplicaci&oacute;n Web debe
      recordarse que una vez calculada la p&aacute;gina se
      termina su ejecuci&oacute;n e inicialmente no hay datos
      disponibles; por lo tanto en cada recarga de
      p&aacute;gina el script debe ser ejecutado completamente
      hasta su finalizaci&oacute;n. Para facilitarle al lector
      su aprendizaje se van a generar ficheros .php para cada
      operaci&oacute;n. La manera de abstraer los pasos de
      valores entre recargas de p&aacute;gina es con los
      m&eacute;todos GET y POST, en el caso de las operaciones
      del listado se pasan los datos mediante el m&eacute;todo
      GET, es decir mediante la llamada al script, por ejemplo
      ver.php, seguido del s&iacute;mbolo ? seguido de una
      terna: nombre de par&aacute;metro, s&iacute;mbolo = y
      el valor; por ejemplo ?id=1 ser&iacute;a pasar el
      par&aacute;metro id con el valor 1. Despu&eacute;s
      estos par&aacute;metros se podr&aacute;n recuperar de
      una manera sencilla.</para>
      <para>En la cuarta parte, simplemente se cierran los tag que
      se hab&iacute;a abierto prteviamente para dar un
      c&oacute;digo HTML V&aacute;lido.</para>
      <para>Acon tinuaci&oacute;n veremos los distintos tipos
      de enlaces que disponemos en la p&aacute;gina de listado
      index.php del directorio.</para>
    </section>
    <section>
      <title>A&ntilde;adir un nuevo registro.</title>
      <para>A continuaci&oacute;n veremos c&oacute;mo se
      estructura un fichero nuevo.php:</para>
      <informalexample>
        <programlisting role="PHP">
          &#60;&#63;php 
          &#47;&#47;incluimos el fichero config.php para coger los datos de la conexi&oacute;n
          include_once('..&#47;config.php');
          &#47;&#47;cogemos las variables de las coneci&oacute;n para que se puedan utilizar en el script
          global $server, $database, $user, $passwd;
          &#47;&#47;abrimos la conexi&oacute;n
          $conexion = mysql_connect($server,$user,$passwd);
          &#47;&#47;elegimos la BBDD
          mysql_select_db ($database, $conexion) OR die ("No se puede conectar");

          &#63;&#62;
          &#60;html&#62;
            &#60;head&#62;
              &#60;TITLE&#62;Nueva Asignatura&#60;&#47;TITLE&#62;
              &#60;LINK REL="stylesheet" TYPE="text&#47;css"
              HREF="..&#47;estilo.css" &#47;&#62;
            &#60;&#47;head&#62;
            &#60;body&#62;
              &#60;&#63;php
              &#47;&#47;comprueba si se entas enviando datos para guardar
              &#47;&#47;si no es asi es que tiene que presentar el formulario
              if(!isset( $_POST['nuevo']))
              {
              &#47;&#47;coloca el principio del formulario para que vuelva al mismo script cuando se rellene
                      echo "&#60;form method=\"post\" action=\"nuevo.php\"&#62;";
              &#47;&#47;aqui se deben poner tantas l&iacute;neas echo como campos haya
              &#47;&#47;cambiando el echo "Nombre : &#60;input type=\"text\" name=\"nombre\" maxlength=200 size=40&#62;&#60;br&#62;";
              &#47;&#47; por echo "Nombre : &#60;input type=\"text\" name=\"nombre_campo\" maxlength=longitud_campo size=tama&ntilde;o_caja_texto&#62;&#60;br&#62;";
              &#47;&#47;se coloca la caja de texto para el nombre
                      echo "Nombre : &#60;input type=\"text\" name=\"nombre\" maxlength=100 size=40&#62;&#60;br&#62;";
              &#47;&#47;&#47;&#47;se coloca el bot&oacute;n de guardar
                      echo "&#60;input type=\"submit\" name=\"nuevo\" value=\"Guardar\"&#62;&#60;&#47;form&#62;&#60;br&#62;";
              }else{
              &#47;&#47;si se han metido los datos en el formulario
              &#47;&#47;se deben colocar tantos isset($_POST['nombre_campo']) &amp;&amp; como campos haya en la tabla
                      if(isset($_POST['nombre'])){
              &#47;&#47;en esta linea se ponen los nombres de los campos separados por comas y en la parte de values lo mismo pero con 
              &#47;&#47;variables $_POST['nombre_campo']
                              $sql="INSERT INTO `asignaturas` ( `id` , `nombre`)
                              VALUES (NULL , '".$_POST['nombre']."');";
                              &#47;&#47;echo $sql;
              &#47;&#47;se ejecuta la inserci&oacute;n de datos
                              $result=mysql_query($sql,$conexion);
              &#47;&#47;se informa de que se a&ntilde;adido un nueva asignatura
                              echo "&#60;p&#62;Asignatura A&ntilde;adida&#60;&#47;p&#62;";
              &#47;&#47;se coloca el enlace que permite volver al listado
                              echo "&#60;p&#62;&#60;A HREF='index.php'&#62;Volver&#60;&#47;A&#62;&#60;&#47;p&#62;";
                      }else{
              &#47;&#47; si no nos han metido campos
                              echo "&#60;p&#62;Vuelva a intentarlo&#60;&#47;p&#62;";
              &#47;&#47; se vuelve a colocar el formulario con los mismos campos que ahora, la diferenia es que se pone tantas veces como campos haya en 
              &#47;&#47;los VALUE el $_POST['nombre_de_campo'] para que no haya que volver a teclearlo
                              echo "&#60;form method=\"post\" action=\"nuevo.php\" &#62;";
              &#47;&#47; se coloca la caja del nombre
                              echo "Nombre : &#60;input type=\"text\" name=\"nombre\" value=\"".$_POST['nombre']."\"  maxlength = 100 size=40&#62;&#60;br&#62;";
              &#47;&#47; se coloca el boton de guardar
                              echo "&#60;input type=\"submit\" name=\"nuevo\" value=\"Guardar\"&#62;&#60;&#47;form&#62;&#60;br&#62;";
                      }
              }
              &#63;&#62;
            &#60;&#47;body&#62;
          &#60;&#47;html&#62;
        </programlisting>
      </informalexample>
      <para>Como puede verse la estructura principal es muy
      parecida a la del fichero index.php del directorio. En la
      primera parte se hacen las inicializaciones de la BBDD, en la
      segunda se ponen los tags inciales de HTML, en la tercera se
      hacen las comprobaciones , presentaci&oacute;n del
      formulario e inserci&oacute;n del registro y en la cuarta
      parte los tags finales del HTML.</para>
      <para>En al tercera parte se puede ver c&oacute;mo se
      discrimina dependiendo de si el valor 'nuevo' de la variable
      POST est&aacute; presente (si se est&aacute; mandando
      el formulario, recordar el m&eacute;todo POST explicado
      en el punto anterior, que se utiliza en el formulario de esta
      pagina, se expondr&aacute; m&aacute;s adelante). En
      el primer caso ( no se ha enviado un formulario ), se genera
      el formulario de alta de asignatura, indicando los campos
      necesarios, observse que el formualrio se env&iacute;a
      por el m&eacute;todo POST, as&iacute; se pueden pasar
      tambi&eacute;n los par&aacute;metros, al siguiente
      script que se ejecute. En el segundo caso el formulario ya se
      ha enviado, si se cumplen los requisitos para dar de alta un
      registro de asignatura se pasa a hacer al
      inserci&oacute;n, se informa de ello al usuario y se
      coloca el bot&oacute;n para volver; si no se cumplen los
      requisitos para dar de alta el registro, se informa de ello
      al usuario y se vuelve a presentar el formulario.</para>
      <para>Por lo que se puede ver no hay muchas m&aacute;s
      diferencias con el resto de las partes del fichero.</para>
    </section>
    <section>
      <title>El fichero ver.php del directorio</title>
      <para>A continuaci&oacute;n ver&aacute; como
      construir el fichero de visualizaci&oacute;n de un
      registro:</para>
      <informalexample>
        <programlisting role="PHP">
          &#60;&#63;php
          &#47;&#47;incluimos el fichero config.php para coger los datos de la conexi&oacute;n
          include_once('..&#47;config.php');
          &#47;&#47;cogemos las variables de las coneci&oacute;n para que se puedan utilizar en el script
          global $server, $database, $user, $passwd;
          &#47;&#47;abrimos la conexi&oacute;n
          $conexion = mysql_connect($server,$user,$passwd);
          &#47;&#47;elegimos la BBDD
          mysql_select_db ($database, $conexion) OR die ("No se puede conectar");
          &#47;&#47;rellenamos la consulta, cambiar alumnos por el nombre de la tabla a listar
          $sql="Select * from asignaturas WHERE id=".$_GET['id'].";";
          &#47;&#47;re realiza la consulta
          $result=mysql_query($sql,$conexion);
          &#47;&#47;print $sql;
          &#47;&#47;se coge el registro del alumno
          $row= mysql_fetch_array($result);
          &#63;&#62;
          &#60;html&#62;
            &#60;head&#62;
              &#60;TITLE&#62;Alumno:&#60;&#63;php echo $row['nombre']; &#63;&#62;&#60;&#47;TITLE&#62;
              &#60;LINK REL="stylesheet" TYPE="text&#47;css"
              HREF="..&#47;estilo.css" &#47;&#62;
            &#60;&#47;head&#62;
            &#60;body&#62;
              &#60;&#63;php
              &#47;&#47;en esta parte se muestran los campos del alumno
              &#47;&#47;se debe a&ntilde;adir l&iacute;neas tantas como campos tenga la tabla: echo "&#60;p&#62;Nombre de campo:".$row["nombre_de_campo"]."&#60;&#47;p&#62;";
              &#47;&#47;se muestra el c&oacute;digo del alumno
              echo "&#60;p&#62;C&oacute;digo:".$row["id"]."&#60;&#47;p&#62;";
              &#47;&#47;se muestra el nombre del alumno
              echo "&#60;p&#62;Nombre:".$row["nombre"]."&#60;&#47;p&#62;";
              &#47;&#47;se coloca el enlace para que pueda editarse el alumno.
              echo "&#60;p&#62;&#60;A HREF=editar.php&#63;id=".$row['id']."&#62;Editar&#60;&#47;A&#62;&#60;&#47;TD&#62;&#60;&#47;p&#62;";
              &#47;&#47; se coloca el enlace para borrar el alumno
              echo "&#60;p&#62;&#60;A HREF=borrar.php&#63;id=".$row['id']."&#62;Borrar&#60;&#47;A&#62;&#60;&#47;TD&#62;&#60;&#47;p&#62;";
              &#47;&#47; se coloca el enlace para ir a listado de alumnos
              echo "&#60;p&#62;&#60;A HREF='index.php'&#62;Atras&#60;&#47;A&#62;&#60;&#47;p&#62;";
              &#63;&#62;
            &#60;&#47;body&#62;
          &#60;&#47;html&#62;
        </programlisting>
      </informalexample>
      <para>Como se puede observar en la primera parte del fichero
      se coge el par&aacute;metro por GET del id del registro y
      se realiza la consulta para coger el registro.</para>
      <para>En la tercera parte simplemente se cogen los campos de
      la variable, se presentan al usuario y se pone el
      bot&oacute;n para volver al index.php</para>
    </section>
    <section>
      <title>El fichero editar.php</title>
      <para>A continuaci&oacute;n veremos con se estrcutura el
      fichero editar.php:</para>
      <informalexample>
        <programlisting role="PHP">
          &#60;&#63;php 
          &#47;&#47;incluimos el fichero config.php para coger los datos de la conexi&#63;n
          include_once('..&#47;config.php');
          &#47;&#47;cogemos las variables de las coneci&#63;n para que se puedan utilizar en el script
          global $server, $database, $user, $passwd;
          &#47;&#47;abrimos la conexi&#63;n
          $conexion = mysql_connect($server,$user,$passwd);
          &#47;&#47;elegimos la BBDD
          mysql_select_db ($database, $conexion) OR die ("No se puede conectar");
          &#47;&#47;rellenamos la consulta, cambiar alumnos por el nombre de la tabla a listar
          $sql="Select * from asignaturas WHERE id=".$_GET['id'].";";
          &#47;&#47;re realiza la consulta
          $result=mysql_query($sql,$conexion);
          &#47;&#47;print $sql;
          &#47;&#47;se coge el registro del alumno
          $row= mysql_fetch_array($result);
          &#63;&#62;
          &#60;html&#62;
            &#60;head&#62;
              &#60;TITLE&#62;Editar Asignatura&#60;&#47;TITLE&#62;
              &#60;LINK REL="stylesheet" TYPE="text&#47;css"
              HREF="..&#47;estilo.css" &#47;&#62;
            &#60;&#47;head&#62;
            &#60;body&#62;
              &#60;&#63;php
              &#47;&#47;se mira si se est&#63; enviando el formulario de edici&#63;n del alumno
              if(!isset( $_POST['editar']))
              {
              &#47;&#47;Si se est&#63; enviando el formulario
              &#47;&#47;echo "&#60;p&#62;Vuelva a intentarlo&#60;&#47;p&#62;";
              &#47;&#47;se abre el formulario que envia los datos de las modificaciones de ese registro
                              echo "&#60;form method=\"post\" action=\"editar.php&#63;id=".$_GET['id']."\" &#62;";
              &#47;&#47; muestra el c&#63;digo del alumno
                              echo "Codigo:".$row['id']."&#60;br&#62;";
              &#47;&#47; a partir de aqui se muestran los campos a rellenar en el formulario
              &#47;&#47; si se substituye echo "Nombre : &#60;input type=\"text\" name=\"nombre\" value=\"".$row['nombre']."\" maxlength =200 size=40&#62;&#60;br&#62;";
              &#47;&#47; por echo "Nombre : &#60;input type=\"text\" name=\"nombre_de_campo\" value=\"".$row['nombre']."\" maxlength =longitud_maxima_de_campo 
              &#47;&#47;size=tama&#63;o_dte_la_caja&#62;&#60;br&#62;";
              &#47;&#47; se muestra la caja del nombre del alumno
                              echo "Nombre : &#60;input type=\"text\" name=\"nombre\" value=\"".$row['nombre']."\" maxlength =100 size=40&#62;&#60;br&#62;";
              &#47;&#47; se pone el bot&#63;n de guardar los datos
                              echo "&#60;input type=\"submit\" name=\"editar\" value=\"Guardar\"&#62;&#60;&#47;form&#62;&#60;br&#62;";
              }else{
              &#47;&#47; si se env&#63;a el formulario hay que coger los datos del formulario y meterlos en la BBDD
              &#47;&#47; aqui se deben a&#63;adir tantos isset($_POST['nombre_de_campo']) &amp;&amp; como campos haya en la bbdd
                      if(isset($_POST['nombre'])){
              &#47;&#47;se desactiva el contenido de la variable $sql
                              unset($sql);
              &#47;&#47; se rellena la consulta que inserta los datos
              &#47;&#47;se ponen tantos `nombre_de_campo` = '".$_POST['nombre_de_campo']."',
                              $sql="UPDATE `asignaturas` SET `nombre` = '".$_POST['nombre']."' WHERE `id` =".$_GET['id']." LIMIT 1 ;";
                              &#47;&#47;echo $sql;
              &#47;&#47;se envia la inserci&#63;n de datos en la BBDD
                              $result=mysql_query($sql,$conexion);
              &#47;&#47;Se informa por la p&#63;gina web que el alumno ha sido modificado
                              echo "&#60;p&#62;Asignatura Modificada&#60;&#47;p&#62;";
              &#47;&#47;se coloca el bot&#63;n que hace volver al listado de alumnos
                              echo "&#60;p&#62;&#60;A HREF='index.php'&#62;Volver&#60;&#47;A&#62;&#60;&#47;p&#62;";
                      }else{
                      &#47;&#47; se informa al usuario que no se han rellenado los campos
                      echo "Vuelva a intentarlo.&#60;br&#62;";
                      &#47;&#47;se abre el formulario que envia los datos de las modificaciones de ese registro
                              echo "&#60;form method=\"post\" action=\"editar.php&#63;id=".$_GET['id']."\" &#62;";
              &#47;&#47; muestra el c&#63;digo del alumno
                              echo "Codigo:".$row['id']."&#60;br&#62;";
              &#47;&#47; a partir de aqui se muestran los campos a rellenar en el formulario
              &#47;&#47; si se substituye echo "Nombre : &#60;input type=\"text\" name=\"nombre\" value=\"".$row['nombre']."\" maxlength =200 size=40&#62;&#60;br&#62;";
              &#47;&#47; por echo "Nombre : &#60;input type=\"text\" name=\"nombre_de_campo\" value=\"".$row['nombre']."\" maxlength =longitud_maxima_de_campo 
              &#47;&#47; size=tama&#63;o_dte_la_caja&#62;&#60;br&#62;";
              &#47;&#47; se muestra la caja del nombre del alumno
                              echo "Nombre : &#60;input type=\"text\" name=\"nombre\" value=\"".$row['nombre']."\" maxlength =200 size=40&#62;&#60;br&#62;";

              &#47;&#47; se pone el bot&#63;n de guardar los datos
                              echo "&#60;input type=\"submit\" name=\"editar\" value=\"Guardar\"&#62;&#60;&#47;form&#62;&#60;br&#62;";    
                      }
              }
              &#63;&#62;
            &#60;&#47;body&#62;
          &#60;&#47;html&#62;
        </programlisting>
      </informalexample>
      <para>En la primera parte se coge el par&aacute;metro id
      por GET y se cogen los datos de la tabla.</para>
      <para>En la tercera parte es muy parecido al nuevo.php,
      exceptuando por que intenta colocar los datos del registro de
      la tabla en el formulario y hace un UPDATE en lugar de un
      INSERT en la consulta SQL. Los datos en s&iacute; mismos
      del formualario se cogen con POST</para>
    </section>
    <section>
      <title>El fichero borrar.php</title>
      <para>A continuaci&oacute;n se puede ver la estructura
      del fichero borrar.php:</para>
      <informalexample>
        <programlisting role="PHP">
          &#60;&#63;php 
          &#47;&#47;incluimos el fichero config.php para coger los datos de la conexi&oacute;n
          include_once('..&#47;config.php');
          &#47;&#47;cogemos las variables de las coneci&oacute;n para que se puedan utilizar en el script
          global $server, $database, $user, $passwd;
          &#47;&#47;abrimos la conexi&oacute;n
          $conexion = mysql_connect($server,$user,$passwd);
          &#47;&#47;elegimos la BBDD
          mysql_select_db ($database, $conexion) OR die ("No se puede conectar");
          &#47;&#47;rellenamos la consulta, cambiar alumnos por el nombre de la tabla a listar
          $sql="Select * from alumnos WHERE id=".$_GET['id'].";";
          &#47;&#47;re realiza la consulta
          $result=mysql_query($sql,$conexion);
          &#47;&#47;print $sql;
          &#47;&#47;se coge el registro del alumno
          $row= mysql_fetch_array($result);
          &#63;&#62;
          &#60;html&#62;
            &#60;head&#62;
              &#60;TITLE&#62;Borrar Asignatura&#60;&#47;TITLE&#62;
              &#60;LINK REL="stylesheet" TYPE="text&#47;css"
              HREF="..&#47;estilo.css" &#47;&#62;
            &#60;&#47;head&#62;
            &#60;body&#62;
              &#60;&#63;php
              &#47;&#47; se rellena la consulta que borra el alumno se substituye alumno por el nombre de la tabla 
              $sql="DELETE from `asignaturas` WHERE `id` =".$_GET['id']." LIMIT 1 ;";
              &#47;&#47;echo $sql;
              &#47;&#47; se ejecuta la consulta se borrado
              $result=mysql_query($sql,$conexion);
              &#47;&#47; se informa de que se ha eliminado un alumno
              echo "&#60;p&#62;Asignatura eliminada&#60;&#47;p&#62;";
              &#47;&#47; se coloca el enlace que permite volver al listado
              echo "&#60;p&#62;&#60;A HREF='index.php'&#62;Volver&#60;&#47;A&#62;&#60;&#47;p&#62;";

              &#63;&#62;
            &#60;&#47;body&#62;
          &#60;&#47;html&#62;
        </programlisting>
      </informalexample>
      <para>En la primera parte cogemos los datos del registro que
      queremos borrar, por si en alg&uacute;n momento
      quisi&eacute;ramos mostrarlo. En la tercera parte
      borramos el registro en s&iacute; mismo, informamos al
      usuario del cambio y colocamos el bot&oacute;n
      Volver.</para>
    </section>
    <section>
      <title>El fichero buscar.php</title>
      <para>A continuaci&oacute;n se muestra la estructura del
      fichero buscar.php:</para>
      <informalexample>
        <programlisting role="PHP">
          &#60;&#63;php
          &#47;&#47;incluimos el fichero config.php para coger los datos de la conexi&oacute;n
          include_once('..&#47;config.php');
          &#47;&#47;cogemos las variables de las coneci&oacute;n para que se puedan utilizar en el script
          global $server, $database, $user, $passwd;
          &#47;&#47;abrimos la conexi&oacute;n
          $conexion = mysql_connect($server,$user,$passwd);
          &#47;&#47;elegimos la BBDD
          mysql_select_db ($database, $conexion) OR die ("No se puede conectar");

          &#63;&#62;
          &#60;html&#62;
            &#60;head&#62;
              &#60;TITLE&#62;B&uacute;squeda de Asignaturas&#60;&#47;TITLE&#62;
              &#60;LINK REL="stylesheet" TYPE="text&#47;css"
              HREF="..&#47;estilo.css" &#47;&#62;
            &#60;&#47;head&#62;
            &#60;body&#62;
              &#60;p&#62;B&uacute;squeda de Asignaturas.&#60;&#47;p&#62;&#60;&#63;php
              &#47;&#47; coloca el enlace que permite a&ntilde;adir un alumno
              echo "&#60;p&#62;&#60;A HREF='nuevo.php'&#62;Nuevo&#60;&#47;A&#62;&#60;&#47;p&#62;";
              &#47;&#47; se inicia el formulario de la b&uacute;squeda
              echo "&#60;form method=\"post\" action=\"buscar.php\"&#62;";
              &#47;&#47; se indica que el campo de busqueda tiene 20 caracteres de longitud
              echo "&#60;input type=\"text\" name=\"busqueda\" size=20 maxlength =100 value=\"".$_POST['busqueda']."\"&#62;";
              &#47;&#47; se coloca el boton que se paretara para realizar la busqueda
              echo "&#60;input type=\"submit\" name=\"buscar\" value=\"Buscar\"&#62;&#60;&#47;form&#62;&#60;br&#62;";
              &#47;&#47; se rellena la busqueda por todos los campos de la tabla, se debe substituir alumnos por el nombre de la tabla y poner tantos 
              &#47;&#47; nombre_de_campo LIKE '%".$_POST['busqueda']."%' OR como campos haya.
              $sql="SELECT * FROM asignaturas where nombre LIKE '%".$_POST['busqueda']."%';";
              &#47;&#47; se realiza la busqueda
              $result=mysql_query($sql,$conexion);
              &#47;&#47;Se comprueba si hay resultados en la busqueda
              if($row= mysql_fetch_array($result)){
              &#47;&#47; si hay resultados crea la tabla
              echo "&#60;TABLE BORDER='1'&#62;";
              &#47;&#47;pone los campos de la tabla tiene que haber tantos &#60;TD CLASS=\"titulo\"&#62;Nombre_de_campo&#60;&#47;TD&#62; como campos haya
              echo "&#60;TR&#62;&#60;TD CLASS=\"titulo\"&#62;Nombre&#60;&#47;TD&#62;&#60;TD colspan=3  CLASS=\"titulo\"&#62;Opciones&#60;&#47;TD&#62;&#60;&#47;TR&#62;";
              &#47;&#47;coloca las l&iacute;neas de la tabla
              DO
              {
              &#47;&#47;aqui se ponen tantas l&iacute;neas &#60;TD width=300 CLASS=\"linea\"&#62;".$row["nombre_de_campo"]."&#60;&#47;TD&#62; como campos haya en la tabla
              &#47;&#47; se coloca el inicio de la fila
              echo "&#60;TR&#62;";
              &#47;&#47;se coloca el campos del nombre
              echo "&#60;TD width=300 CLASS=\"linea\"&#62;".$row["nombre"]."&#60;&#47;TD&#62;";
              &#47;&#47;se colocan los enlaces de ver editar y borrar alumno
              echo "&#60;TD CLASS=\"linea\"&#62;&#60;A HREF=ver.php&#63;id=".$row['id']."&#62;Ver&#60;&#47;A&#62;&#60;&#47;TD&#62;";
              echo "&#60;TD width=50 CLASS=\"linea\"&#62;&#60;A HREF=editar.php&#63;id=".$row['id']."&#62;Editar&#60;&#47;A&#62;&#60;&#47;TD&#62;";
              echo "&#60;TD width=50 CLASS=\"linea\"&#62;&#60;A HREF=borrar.php&#63;id=".$row['id']."&#62;Borrar&#60;&#47;A&#62;&#60;&#47;TD&#62;";
              &#47;&#47;se termina la fila
              echo "&#60;&#47;TR&#62;";
              }
              &#47;&#47;Comprueba si se ha terminado de poner l&iacute;neas
              WHILE ($row=mysql_fetch_array($result));
              &#47;&#47;como se ha terminado de poner l&iacute;neas se acaba la tabla
              echo "&#60;&#47;TABLE&#62;&#60;br&#62;";
              &#47;&#47;coloca el enlace para volver al listado
              echo "&#60;A HREF=\"index.php\"&#62;Volver&#60;&#47;A&#62;";
              }else{
              &#47;&#47;si no hay registros que coincidan con la busqueda se le indica al usuario
              echo "La b&uacute;squeda no coincide con ning&uacute;n registro de la BBDD&#60;BR&#62;";
              &#47;&#47;se coloca el enlace del volver al listado
              echo "&#60;A HREF=\"index.php\"&#62;Volver&#60;&#47;A&#62;";

              }
              &#63;&#62;
            &#60;&#47;body&#62;
          &#60;&#47;html&#62;
        </programlisting>
      </informalexample>
      <para>Por lo que puede ver el fichero es muy parecido al
      fichero index.php, se ha separado para entender mejor el
      cuadro de b&uacute;squeda.</para>
      <para>En la consulta a realizar se tiene en cuenta el cuadro
      de b&uacute;squeda enviado por POST.</para>
    </section>
    <section>
      <title>Conclusiones</title>
      <para>Como puede ver las modificaicones para la
      adaptaci&oacute;n de estos scripts para entidades son
      laboriosas pero simples de realizar. Como ejercicio propuesto
      a&ntilde;ada m&aacute;s campos a la tabla y modifique
      los ficheros para adaptarse a esos cambios.</para>
    </section>
  </chapter>
 
